// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: order.proto

package orderservice

import (
	"context"

	"study-zero/app/order/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateHomestayOrderRequest            = pb.CreateHomestayOrderRequest
	CreateHomestayOrderResponse           = pb.CreateHomestayOrderResponse
	HomestayOrder                         = pb.HomestayOrder
	HomestayOrderDetailRequest            = pb.HomestayOrderDetailRequest
	HomestayOrderDetailResponse           = pb.HomestayOrderDetailResponse
	UpdateHomestayOrderTradeStateRequest  = pb.UpdateHomestayOrderTradeStateRequest
	UpdateHomestayOrderTradeStateResponse = pb.UpdateHomestayOrderTradeStateResponse
	UserHomestayOrderListRequest          = pb.UserHomestayOrderListRequest
	UserHomestayOrderListResponse         = pb.UserHomestayOrderListResponse

	OrderService interface {
		// create homestay order
		CreateHomestayOrder(ctx context.Context, in *CreateHomestayOrderRequest, opts ...grpc.CallOption) (*CreateHomestayOrderResponse, error)
		// homestay order detail
		HomestayOrderDetail(ctx context.Context, in *HomestayOrderDetailRequest, opts ...grpc.CallOption) (*HomestayOrderDetailResponse, error)
		// update homestay order trade state
		UpdateHomestayOrderTradeState(ctx context.Context, in *UpdateHomestayOrderTradeStateRequest, opts ...grpc.CallOption) (*UpdateHomestayOrderTradeStateResponse, error)
		// user homestay order list
		UserHomestayOrderList(ctx context.Context, in *UserHomestayOrderListRequest, opts ...grpc.CallOption) (*UserHomestayOrderListResponse, error)
	}

	defaultOrderService struct {
		cli zrpc.Client
	}
)

func NewOrderService(cli zrpc.Client) OrderService {
	return &defaultOrderService{
		cli: cli,
	}
}

// create homestay order
func (m *defaultOrderService) CreateHomestayOrder(ctx context.Context, in *CreateHomestayOrderRequest, opts ...grpc.CallOption) (*CreateHomestayOrderResponse, error) {
	client := pb.NewOrderServiceClient(m.cli.Conn())
	return client.CreateHomestayOrder(ctx, in, opts...)
}

// homestay order detail
func (m *defaultOrderService) HomestayOrderDetail(ctx context.Context, in *HomestayOrderDetailRequest, opts ...grpc.CallOption) (*HomestayOrderDetailResponse, error) {
	client := pb.NewOrderServiceClient(m.cli.Conn())
	return client.HomestayOrderDetail(ctx, in, opts...)
}

// update homestay order trade state
func (m *defaultOrderService) UpdateHomestayOrderTradeState(ctx context.Context, in *UpdateHomestayOrderTradeStateRequest, opts ...grpc.CallOption) (*UpdateHomestayOrderTradeStateResponse, error) {
	client := pb.NewOrderServiceClient(m.cli.Conn())
	return client.UpdateHomestayOrderTradeState(ctx, in, opts...)
}

// user homestay order list
func (m *defaultOrderService) UserHomestayOrderList(ctx context.Context, in *UserHomestayOrderListRequest, opts ...grpc.CallOption) (*UserHomestayOrderListResponse, error) {
	client := pb.NewOrderServiceClient(m.cli.Conn())
	return client.UserHomestayOrderList(ctx, in, opts...)
}
